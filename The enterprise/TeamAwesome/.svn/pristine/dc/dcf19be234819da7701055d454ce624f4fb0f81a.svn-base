using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Model.DomainModel;
using TheEnterprise.Design;

namespace TheEnterprise.Pages
{
    /// <summary>
    /// Interaction logic for Main.xaml
    /// </summary>
    public partial class Main : UserControl
    {
        private MainWindow mainWindow;
        private List<GridPresent> grids = new List<GridPresent>(); 

        public Main(MainWindow mainWindow)
        {
            InitializeComponent();
            this.mainWindow = mainWindow;
            GridPresent gp = new GridPresent(mainWindow.ModelFacade.FindQuestionGroup(1));
            grids.Add(gp);
            foreach (Question q in mainWindow.ModelFacade.FindQuestionGroup(1).Questions)
            {
                if (q.IsActive(mainWindow.ModelFacade.Filter))
                {
                    RowEntity row = gp.addRow(q.Rank, q);
                    row.SelectionChanged += AnswerSelectionChanged;
                }    
            }

            Content.Children.Add(gp.LoadGrid());

        }

        private void AnswerSelectionChanged(RowEntity row)
        {

            var selectedAnswer = row.AnswerComboBox.SelectedItem as Answer;
            row.QuestionObject.Value = selectedAnswer;
            // Aktivere jeg nogle nye?
            foreach (GridPresent gp in grids)
            {
                foreach (Question q in gp.QuestionGroup.Questions)
                {
                    if (q.IsActive(mainWindow.ModelFacade.Filter) && !gp.IsCopy(q))
                    {
                        RowEntity newRow = gp.addRow(q.Rank, q);
                        newRow.SelectionChanged += AnswerSelectionChanged;
                    }
                }
                gp.Refresh(mainWindow.ModelFacade.Filter);
            }
        }


    } 

}
