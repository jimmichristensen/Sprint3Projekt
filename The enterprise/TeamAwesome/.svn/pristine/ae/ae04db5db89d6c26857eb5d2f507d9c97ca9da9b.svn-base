using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace TheEnterprise.Pages.Admin.PopUp.Question
{
    /// <summary>
    /// Interaction logic for UpdateQuestion.xaml
    /// </summary>
    public partial class UpdateQuestion : Window
    {

        private Model.DomainModel.Question question;
        private MainWindow mainWindow;
        public UpdateQuestion(Model.DomainModel.Question question,MainWindow mainWindow)
        {
            InitializeComponent();
            this.question = question;
            this.mainWindow = mainWindow;
            QuestionRankTextBox.Text = question.Rank.ToString();
            QuestionTitelTextBox.Text = question.Title;
            QuestionPrintTitleTextBox.Text = question.PrintTitle;


            
            var noRequired = new Model.DomainModel.QuestionGroup()
            {
                Title = "Ikke required",
                Rank = 0
            };
            RequiredQuestionGroup.Items.Add(noRequired);
            foreach (Model.DomainModel.QuestionGroup questionGroup in mainWindow.ModelFacade.Filter.QuestionGroups)
            {
                RequiredQuestionGroup.Items.Add(questionGroup);
            }

            if (question.Required == null)
            {
                RequiredQuestionGroup.SelectedIndex = 0;
            }
            else
            {
                setRequired();
            }

            DefaultComboBox.Items.Add("Ingen default");
            foreach (Model.DomainModel.Answer answer in question.Answers)
            {
                DefaultComboBox.Items.Add(answer.Title);
            }

            int i = 0;
            if (question.Default != null)
            {
                foreach (string item in DefaultComboBox.Items)
                {
                    if (item == question.Default.Title)
                    {
                        DefaultComboBox.SelectedIndex = i;
                        break;
                    }
                    i++;
                }
            }
            else
            {
                DefaultComboBox.SelectedIndex = 0;
            }


        }

        private void setRequired()
        {
            // Question group
            int index = 0;
            foreach (Model.DomainModel.QuestionGroup questionGroup in RequiredQuestionGroup.Items)
            {
                if (question.Required.QuestionGroup.Rank == questionGroup.Rank)
                {
                    break;
                }
                index++;
            }
            RequiredQuestionGroup.SelectedIndex = index;

            // Spørgsmål
            Model.DomainModel.QuestionGroup selectedQuestionGroup = RequiredQuestionGroup.SelectedItem as Model.DomainModel.QuestionGroup;
            RequiredQuestion.ItemsSource = null;
            if (selectedQuestionGroup != null)
            {
                RequiredQuestion.ItemsSource = selectedQuestionGroup.Questions;
            }

            index = 0;
            foreach (Model.DomainModel.Question question in RequiredQuestion.Items)
            {
                if (this.question.Required.Rank == question.Rank)
                {
                    break;
                }
                index++;
            }
            RequiredQuestion.SelectedIndex = index;

            Model.DomainModel.Question selectedQuestion = RequiredQuestion.SelectedItem as Model.DomainModel.Question;
            RequiredAnswer.ItemsSource = null;
            if (selectedQuestion != null)
            {
                RequiredAnswer.ItemsSource = selectedQuestion.Answers;
            }

            index = 0;
            foreach (Model.DomainModel.Answer answer in RequiredAnswer.Items)
            {
                if (question.Required.Value.Rank == answer.Rank)
                {
                    break;
                }
                index++;
            }
            RequiredAnswer.SelectedIndex = index;

        }

        private void saveUpdatedQuestion_Click(object sender, RoutedEventArgs e)
        {
            decimal parsedValue;
            if (QuestionTitelTextBox.Text != "" && QuestionRankTextBox.Text != "")
            {
                if (decimal.TryParse(QuestionRankTextBox.Text, out parsedValue))
                {
                    if (Helper.QuestionRank(parsedValue,mainWindow) == true)
                    {
                        this.question.Title = QuestionTitelTextBox.Text;
                        this.question.Rank = decimal.Parse(QuestionRankTextBox.Text);
                        this.question.Default = DefaultComboBox.SelectedItem.ToString() != "Ikke required" ? question.Answers.SingleOrDefault(q => q.Title == DefaultComboBox.SelectedItem.ToString()) : null;
                        this.question.Required = requiredQuestion();
                        this.question.PrintTitle = QuestionPrintTitleTextBox.Text;
                        Close();
                    }
                    else
                    {
                        ErrorLabel.Content = "Rank er ikke tilgængeligt!";
                    }
                }
                else
                {
                    ErrorLabel.Content = "Rank skal være tal";
                }
            }
            else
            {
                ErrorLabel.Content = "Alle felter skal udfyldes";
            }
        }

        private Model.DomainModel.Question requiredQuestion()
        {
            // Tjek om alle 3 er sat
            Model.DomainModel.QuestionGroup selectedQuestionGroup = RequiredQuestionGroup.SelectedItem as Model.DomainModel.QuestionGroup;
            if (selectedQuestionGroup.Rank == 0)
            {
                return null;
            }
            if (RequiredQuestion.SelectedItem == null)
            {
                mainWindow.FeedBackLabel.Content = "Du skal vælge det spørgsmål du vil være required til";
                throw new Exception();
            }
            if (RequiredAnswer.SelectedItem == null)
            {
                mainWindow.FeedBackLabel.Content = "Du skal vælge den svarmulighed du vil være required til";
                throw new Exception();
            }

            // Opret required object og return :)
            var question = RequiredQuestion.SelectedItem as Model.DomainModel.Question;
            return question.CreateRequiredObject(RequiredAnswer.SelectedItem as Model.DomainModel.Answer);
        }

        // Spørgsmåls gruppe valgt
        private void RequiredQuestionGroup_SelectionChanged(object sender, SelectionChangedEventArgs e)
  {
            Model.DomainModel.QuestionGroup selectedQuestionGroup = RequiredQuestionGroup.SelectedItem as Model.DomainModel.QuestionGroup;
            RequiredQuestion.ItemsSource = null;
            if (selectedQuestionGroup != null)
            {
                if (selectedQuestionGroup.Rank == 0)
                {
                    RequiredQuestion.ItemsSource = null;
                    RequiredAnswer.ItemsSource = null;
                }
                else
                {
                    RequiredQuestion.ItemsSource = selectedQuestionGroup.Questions;
                }

            }
        }
          
         private void RequiredQuestion_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
             Model.DomainModel.Question selectedQuestion = RequiredQuestion.SelectedItem as Model.DomainModel.Question;
            RequiredAnswer.ItemsSource = null;
            if (selectedQuestion != null)
            {
                RequiredAnswer.ItemsSource = selectedQuestion.Answers;

            }

        }
    }
}
