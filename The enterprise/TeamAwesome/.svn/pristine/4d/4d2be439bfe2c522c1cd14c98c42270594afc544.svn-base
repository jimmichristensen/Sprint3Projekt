using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Model.DomainModel;
using TheEnterprise.Pages.Admin;
using TheEnterprise.Pages.Admin.PopUp.Question;

namespace TheEnterprise.Pages
{
    /// <summary>
    /// Interaction logic for QuestionView.xaml
    /// </summary>
    public partial class QuestionView : UserControl
    {
        private MainWindow mainWindow;
        private QuestionGroup questionGroup;

        public QuestionView(MainWindow mainWindow,QuestionGroup questionGroup)
        {
            InitializeComponent();
            this.mainWindow = mainWindow;
            this.questionGroup = questionGroup;
            TitleLabel.Content = "Spørgsmål til "+questionGroup.Title;
            QuestionListBox.ItemsSource = mainWindow.ModelFacade.FindQuestionGroup(questionGroup).Questions;
            

        }

        private void OpenAnswers_Click(object sender, RoutedEventArgs e)
        {
            if (QuestionListBox.SelectedItem != null) 
            { 
            Question selectedQuestion = QuestionListBox.SelectedItem as Question;
            mainWindow.ChangeView(new AnswerView(mainWindow,questionGroup,selectedQuestion));
            }
        }

        private void CreateQuestionButton_Click(object sender, RoutedEventArgs e)
        {
            CreateQuestion createWindow = new CreateQuestion(mainWindow);
            createWindow.CreateNewQuestion += CreateNewQuestionWindow;
            createWindow.Show();
        }

        private void PageBack_Click(object sender, RoutedEventArgs e)
        {
            mainWindow.ChangeView(new QuestionGroupView(mainWindow));
        }

        private void ChangeQuestion_Click(object sender, RoutedEventArgs e)
        {
            Question selectedQuestion = QuestionListBox.SelectedItem as Question;
            UpdateQuestion Window = new UpdateQuestion(selectedQuestion,mainWindow);
            Window.Show();
            Window.Closed += saveChanges;

        }

        private void saveChanges(object sender, EventArgs e)
        {
            mainWindow.ModelFacade.Save();
            QuestionListBox.Items.Refresh();
        }

        private void CreateNewQuestionWindow(string title, decimal rank, Question question = null)
        {
            mainWindow.ModelFacade.FindQuestionGroup(questionGroup.Rank).Questions.Add(new Question()
            {
                Title = title,
                Rank = rank
            });
            QuestionListBox.Items.Refresh();
            mainWindow.ModelFacade.Save();
        }

        private void DeleteQuestion_Click(object sender, RoutedEventArgs e)
        {
            Question selectedQuestion = QuestionListBox.SelectedItem as Question;
            if (selectedQuestion != null)
            {
                questionGroup.Questions.Remove(selectedQuestion);
                mainWindow.ModelFacade.Save();
                QuestionListBox.Items.Refresh();
            }
        }

    }
}
